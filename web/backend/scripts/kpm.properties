#### INPUT FILES ####

# Path to the file containing the protein interaction
# network.  This file must be in sif format. 
graph_file = sampleNetwork.sif

# If the graph file has a header row
graph_file_has_header = true

# The separating character for the columns
# in the graph file: TAB, SPACE or COMMA
graph_file_separator = TAB

# Path to the file containing the list of
# paths to the matrices and their respective case exceptions
# (L parameters) 
datasets_file = datasets_file.txt

# If the datasets file contains a header
datasets_file_has_header = true

# The separating character for the columns
# in the datasets file: TAB, SPACE or COMMA
datasets_file_separator = TAB

# If the matrix files contain headers
matrix_files_have_header = false

# The separating character for the columns
# in the matrix files: TAB, SPACE or COMMA
matrix_files_separator = TAB

# Path to the file cotaining the positive gene 
# list (i.e. genes that will be given high priority
# when searching for pathways)
positive_file = positive_list.txt

# Path to the file cotaining the positive gene 
# list (i.e. genes that will be given low priority
# when searching for pathways)
negative_file = negative_list.txt

#### OUTPUT FILES ####

#folder to output the result files
results_folder = results

# Path to the file where summary will be written to. 
# Comment this property if no file is desired
summary_file = summary

# Path to the file containing ALL pathways. 
# Comment this property if no file is desired
pathways_file = pathways

# Path to the file containing pathways stats. 
# Comment this property if no file is desired
pathways_stats_file = pathways_stats

# Path to the file containing gene stats. 
# Comment this property if no file is desired
gene_stats_file = gene_stats

# Path to the file where stats of the datasets
# will be output to. 
datasets_stats_file = datasets_stats

# If all pathways should be written to a single
# file or in separate ones.
pathways_single_file = true

# If the summary file should be generated
generate_summary_file = true

# If the pathways file should be generated
generate_pathways_file = true

# If the pathways stats file should be generated
generate_pathways_stats_file = true

# If the gene stats file should be generated
generate_gene_stats_file = true

# If the datasets stats should be generated
generate_datasets_stats_file = true

# Suffix to add to end of output files
suffix = -

# File output extension
file_extension = .txt

#### BASIC PARAMETERS ####

# Number of GENE exceptions (K parameter)
# Only used for INES strategy, in GLONE this
# paramater will be ignored.
gene_exceptions = 0

# Strategy for extracting pathways: INES or GLONE
# (see KPM paper for details of each)
strategy = INES

# Algorithm used for extracting pathways: GREEDY, ACO or OPTIMAL
# (see KPM paper for details of each)
algorithm = GREEDY

#### ADVANCED PARAMETERS (GENERAL) ####

# Number of cores/processors used for parallel computing.
# Can take values between 1 and MAX (where MAX equals the maximum
# number of available threads in the system.  
# In case value is numeric and larger than MAX, then it will default to MAX. 
processors = 1

# The heuristic value for each node when searching for solutions.
# This can be AVERAGE (average differentially expressed cases) or
# TOTAl (total number of differentially expressed cases). 
node_heuristic = AVERAGE

# Which operator to use to combine the datasets (OR, AND, CUSTOM supported for now).
combine_operator = OR

# The boolean formula used to combine the different datasets. Used
# only if combine_operator == custom. Valid operators: 
# && = AND, || = OR, ! = negation, () = parenthesis. 
combine_formula = L1 || L2

# Determines whether certain evaluation routines should run. Enabling only
# yields some statistics, Has no effect on a "normal" algorithm run other
# than slowing it down.
eval = false

# Whether the solution array is allowed to yield multiple entries of the
# same solution
double_solutions = false

# The maximum number of reported pathways
max_solutions = 20

#### ADVANCED PARAMETERS (ONLY USED FOR ACO) ####

# Alpha parameter
alpha = 2.0

# Beta parameter
beta = 5.0

# Rho parameter
rho = 0.1

# The function that determines how fast the pheromone Rho should
# decay: CONSTANT, LINEAR, QUADRATIC or EXPONENTIAL
rho_decay = CONSTANT

# Minimum pheromone that can be on a node
tau_min = 0.1

# Defines the tradeoff between pheromones and fitness when an ant picks a 
# new vertex. If TRUE, then tradeOff(a,b) = a^(alpha)*b^(beta). If FALSE,
# tradeOff(a,b) = alpha * a + beta * b.
multiplicative_tradeoff = true

# If TRUE uses and iteration bases ACO, if FALSE uses a global based ACO
iteration_based = false

# Maximum number of iterations overall
# INF = infinite
max_iterations = 10000

# Maximum number of iterations allowed without improvement:
max_iterations_wo_change = 100

# How many solutions should be considered before updating the pheromones
# and begin a new iteration
num_solutions_per_iteration = 20

# Number of starting nodes (only for GLONE ACO)
num_startnodes = 30

# Which local search method is used to improve the results:
# GREEDY1, GREEDY2, OPTIMAL or OFF
local_search = GREEDY1
